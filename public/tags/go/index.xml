<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Don的小窝</title>
    <link>http://rendongwei.cn/tags/go/</link>
    <description>Recent content in Go on Don的小窝</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://rendongwei.cn/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go-Json</title>
      <link>http://rendongwei.cn/posts/go/go-json/</link>
      <pubDate>Fri, 11 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>http://rendongwei.cn/posts/go/go-json/</guid>
      <description>前言 很多程序都需要处理或者发布数据，不管这个程序是要使用数据库，进行网络调用，还是与分布式系统打交道</description>
    </item>
    
    <item>
      <title>Go-切片7连问</title>
      <link>http://rendongwei.cn/posts/go/go-%E5%88%87%E7%89%877%E8%BF%9E%E9%97%AE/</link>
      <pubDate>Fri, 11 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>http://rendongwei.cn/posts/go/go-%E5%88%87%E7%89%877%E8%BF%9E%E9%97%AE/</guid>
      <description>Go之切片7连问 数组和切片有什么区别？ Go语言中数组是固定长度的，不能动态扩容，在编译期就会确定大小</description>
    </item>
    
    <item>
      <title>Go-并发</title>
      <link>http://rendongwei.cn/posts/go/go-%E5%B9%B6%E5%8F%91/</link>
      <pubDate>Fri, 11 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>http://rendongwei.cn/posts/go/go-%E5%B9%B6%E5%8F%91/</guid>
      <description>前言 go并发包含两个概念： goroutine:使用一个函数，但是与调用该函数是独立的。 channel</description>
    </item>
    
    <item>
      <title>Go-特点</title>
      <link>http://rendongwei.cn/posts/go/go-%E7%89%B9%E7%82%B9/</link>
      <pubDate>Fri, 11 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>http://rendongwei.cn/posts/go/go-%E7%89%B9%E7%82%B9/</guid>
      <description>支持函数多个返回值 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 package main import &amp;#34;fmt&amp;#34; //定义两个返回值的函数 func getNames() (n1, n2 string) { return &amp;#34;name1&amp;#34;,</description>
    </item>
    
  </channel>
</rss>
